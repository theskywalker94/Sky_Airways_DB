// modello_ER.dbml (dbdiagram.io)

Table Aeroporto {
  id_IATA char(3) [pk, not null]
  nome varchar(100) [not null]
  città varchar(100) [not null]
  paese varchar(100) [not null]
  indexes {
    (paese)
  }
}

Table Volo {
  id_volo varchar(6) [pk, not null]
  partenza char(3) [not null] //foreign key
  destinazione char(3) [not null] //foreign key
  ora_partenza time [not null]
  ora_arrivo time [not null]
  indexes {
    (partenza, ora_partenza)
  }
}

Table Volo_reale {
  id_volo varchar(6) [not null] //foreign key
  data_partenza date [not null]
  data_arrivo date [not null]
  stato varchar(11) [not null, note: 'CHECK (stato IN (programmato, cancellato, completato))']
  modello varchar(7) [not null, note: 'CHECK (modello IN (B787, A320neo))']
  indexes {
    (id_volo, data_partenza) [pk, unique]
  }
}

Table Biglietto {
  id_biglietto int [pk, not null]
  id_volo varchar(6) [not null]
  data_partenza date [not null]
  id_prenotazione int [not null]
  posto varchar(5) [not null]
  classe varchar(20) [not null, note: 'CHECK (classe IN(business, economy))']
  id_passeggero int [not null]
  prezzo decimal [not null]
  validità varchar(10) [not null, note: 'CHECK (stato IN (valido, annullato, utilizzato))']
  indexes {
    (id_volo, data_partenza)
  }
}

Table Prenotazione {
  id_prenotazione int [pk, not null]
  id_acquirente int [not null]
  data_prenotazione date [not null]
  metodo_pagamento varchar(100) [note: 'CHECK (metodo_pagamento IN (credit_card, cash, gift_card))']
  indexes {
    (id_acquirente, data_prenotazione)
  }
}

Table Passeggero {
  id_passeggero int [pk, not null]
  nome varchar(100) [not null]
  cognome varchar(100) [not null]
  data_nascita date [not null]
  email varchar(200) [not null, unique]
  telefono varchar(50) [null]
  indexes {
    (email)
  }
}

Ref Parte_da: Volo.partenza > Aeroporto.id_IATA // Volo(1:1) - Aeroporto(0:N)
Ref Arriva_a: Volo.destinazione > Aeroporto.id_IATA // Volo(1:1) - Aeroporto(0:N)
Ref Occorrenza: Volo_reale.id_volo > Volo.id_volo // Biglietto(1:1) - Volo(0:N)
Ref Prenota: Biglietto.id_volo > Volo_reale.id_volo // Biglietto(1:1) - Volo(0:N)
Ref Possiede: Passeggero.id_passeggero < Biglietto.id_passeggero // Passeggero(0:N) - Biglietto(1:1)
Ref Include: Prenotazione.id_prenotazione < Biglietto.id_prenotazione // Prenotazione(1:N) - Biglietto(1:1)
Ref Effettua: Passeggero.id_passeggero < Prenotazione.id_acquirente // Passeggero(0:N) - Prenotazione(0:1)